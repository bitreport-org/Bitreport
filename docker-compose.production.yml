version: '3.7'

volumes:
  core-migrations:
  dashboard-public:
  dashboard-settings:
  dashboard-logs:
  influx-data:
  postgres-data:
  redis-data:
  celery-beat-data:

services:
  web:
    image: $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_NAME
    build:
      context: ./web
      cache_from:
        - $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_NAME
    depends_on:
      - dashboard
      - flower
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/cloudflare:/etc/nginx/cloudflare
      - dashboard-public:/usr/src/app/public
      - dashboard-logs:/usr/src/app/log

  core:
    image: $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    build:
      context: ./core
      cache_from:
        - $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    environment: &env
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
      - FLASK_APP=core.py
    command: bash -c "gunicorn -b 0.0.0.0:5001 -w 1 core:app"
    depends_on:
      - influx
      - postgres
    volumes:
      - core-migrations:/app/migrations/versions

  flower:
    image: $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    build:
      context: ./core
      cache_from:
        - $CI_REGISTRY_IMAGE/core:base
        - $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    environment: *env
    command: bash -c "flower -A core.celery --basic_auth=admin:magicPassword --url_prefix=core/tasks"
    depends_on:
      - celery

  celery:
    image: $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    build:
      context: ./core
      cache_from:
        - $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    environment: *env
    command: bash -c "celery worker -A core.celery -n johnny@%h"
    depends_on:
      - redis
      - influx
      - postgres

  celery-beat:
    image: $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    build:
      context: ./core
      cache_from:
        - $CI_REGISTRY_IMAGE/core:$CI_COMMIT_REF_NAME
    environment: *env
    command: bash -c "celery beat -A core.celery --schedule=tmp/celerybeat-schedule --pidfile=tmp/celerybeat.pid"
    depends_on:
      - redis

  influx:
    image: influxdb:1.5.2-alpine
    environment:
      - INFLUXDB_LOGGING_LEVEL=warn
    volumes:
      - influx-data:/var/lib/influxdb
    deploy:
      resources:
        limits:
          memory: 1G

  dashboard:
    image: $CI_REGISTRY_IMAGE/dashboard:$CI_COMMIT_REF_NAME
    build:
      context: ./dashboard
      dockerfile: .docker/production.Dockerfile
      cache_from:
        - $CI_REGISTRY_IMAGE/dashboard:$CI_COMMIT_REF_NAME
    env_file: dashboard/.docker/production.env
    depends_on:
      - postgres
      - redis
      - core
      - sidekiq
    volumes:
      - dashboard-public:/usr/src/app/public
      - dashboard-settings:/usr/src/app/config/settings
      - dashboard-logs:/usr/src/app/log

  postgres:
    image: postgres:10.4-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    command: redis-server
    image: redis:4.0.11-alpine
    volumes:
      - redis-data:/data

  sidekiq:
    image: $CI_REGISTRY_IMAGE/dashboard:$CI_COMMIT_REF_NAME
    build:
      context: ./dashboard
      dockerfile: .docker/production.Dockerfile
      cache_from:
        - $CI_REGISTRY_IMAGE/dashboard:$CI_COMMIT_REF_NAME
    env_file: dashboard/.docker/production.env
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - postgres
      - redis
    volumes:
      - dashboard-public:/usr/src/app/public
      - dashboard-settings:/usr/src/app/config/settings
      - dashboard-logs:/usr/src/app/log
