version: '3'

volumes:
  certs:
  certs-data:
  core-migrations:
  dashboard-public:
  dashboard-settings:
  dashboard-logs:
  influx-data:
  postgres-data:
  redis-data:
  celery-beat-data:

services:
  web:
    build: ./web
    depends_on:
      - dashboard
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/letsencrypt
      - certs-data:/data/letsencrypt
      - dashboard-public:/usr/src/app/public

  core:
    build: ./core
    image: &img core
    environment: &env
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
      - FLASK_APP=core.py
    command: bash -c "flask db migrate && flask db upgrade && gunicorn -b 0.0.0.0:5001 -w 1 core:app"
    expose:
      - 5001
    depends_on:
      - influx
      - postgres
    volumes:
      - core-migrations:/app/migrations/versions

  flower:
    build: ./core
    image: *img
    environment: *env
    command: bash -c "flower -A core.celery --basic_auth=admin:magicPassword"
    volumes:
      - ./core:/app
    expose:
      - 5555
    depends_on:
      - celery

  celery:
    build: ./core
    image: *img
    environment: *env
    command: bash -c "celery worker -A core.celery"
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - influx
      - postgres

  celery-beat:
    build: ./core
    image: *img
    environment: *env
    command: bash -c "celery beat -A core.celery --schedule=tmp/celerybeat-schedule --pidfile=tmp/celerybeat.pid"
    volumes:
      - ./core:/app
    depends_on:
      - redis

  influx:
    image: influxdb:1.5.2-alpine
    environment:
      - INFLUXDB_LOGGING_LEVEL=warn
    volumes:
      - influx-data:/var/lib/influxdb

  dashboard:
    build:
      context: ./dashboard
      dockerfile: .docker/production.Dockerfile
    env_file: dashboard/.docker/production.env
    depends_on:
      - postgres
      - redis
      - core
      - sidekiq
    expose:
      - 3000
    volumes:
      - dashboard-public:/usr/src/app/public
      - dashboard-settings:/usr/src/app/config/settings
      - dashboard-logs:/usr/src/app/log

  postgres:
    image: postgres:10.4-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    command: redis-server
    image: redis:4.0.11-alpine
    volumes:
      - redis-data:/data

  sidekiq:
    build:
      context: ./dashboard
      dockerfile: .docker/production.Dockerfile
    env_file: dashboard/.docker/production.env
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - postgres
      - redis
    volumes:
      - dashboard-public:/usr/src/app/public
      - dashboard-settings:/usr/src/app/config/settings
      - dashboard-logs:/usr/src/app/log
