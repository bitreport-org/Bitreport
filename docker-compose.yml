version: '3'

volumes:
  app-gems:
  influx-data:
  postgres-data:
  redis-data:
  celery-beat-data:

services:
  core:
    build: ./core
    image: &img core
    environment: &env
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      - FLASK_APP=core.py
    command: bash -c "flask db migrate && flask db upgrade && flask run --host=0.0.0.0 --port=5001"
    depends_on:
      - influx
      - postgres
    expose:
      - 5001
    ports:
      - 5001:5001
    volumes:
      - ./core:/app

  celery:
    build: ./core
    image: *img
    environment: *env
    command: bash -c "celery worker -A core.celery --loglevel=INFO"
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - influx
      - postgres

  celery-beat:
    build: ./core
    image: *img
    environment: *env
    command: bash -c "celery beat -A core.celery --schedule=tmp/celerybeat-schedule --loglevel=INFO --pidfile=tmp/celerybeat.pid"
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - influx
      - postgres

  influx:
    image: influxdb:1.5.2-alpine
    environment:
      - INFLUXDB_LOGGING_LEVEL=warn
    ports:
      - 8086:8086
    volumes:
      - influx-data:/var/lib/influxdb

  chronograf:
    image: chronograf:1.7-alpine
    environment:
      - LOG_LEVEL=debug
    ports:
      - 8080:8888
    depends_on:
      - influx

  dashboard:
    build:
      context: ./dashboard
      dockerfile: .docker/Dockerfile
    command: rails s -p 3000 -b 0.0.0.0
    stdin_open: true
    tty: true
    depends_on:
      - postgres
      - redis
      - core
    ports:
      - 3000:3000
    volumes:
      - ./dashboard:/usr/src/app
      - app-gems:/usr/local/bundle

  postgres:
    image: postgres:10.4-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    command: redis-server
    image: redis:4.0.11-alpine
    volumes:
      - redis-data:/data
