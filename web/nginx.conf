upstream dashboard {
  server dashboard:3000;
}

upstream core {
  server core:5001;
}

upstream flower {
  server flower:5555;
}

server {
  listen 8888;
  server_name web;

  location /server_status {
    stub_status;
    allow 10.0.0.0/16;
    deny all;
    access_log off;
   }
}

server {
  server_name www.bitreport.org;
  return 301  $scheme://bitreport.org$request_uri;
}

server {
  listen      80;
  listen [::]:80;
  server_name bitreport.org;
  return 301  https://$host$request_uri;
}

server {
  listen      443           ssl http2;
  listen [::]:443           ssl http2;
  server_name               bitreport.org;

  ssl_certificate           /etc/nginx/cloudflare/bitreport-tld-cert.pem;
  ssl_certificate_key       /etc/nginx/cloudflare/bitreport-tld-key.pem;

  access_log                $RAILS_ROOT/log/nginx.access.log;
  error_log                 $RAILS_ROOT/log/nginx.error.log;

  root                      $RAILS_ROOT/public;
  index                     index.html;

  client_max_body_size      10M;
  keepalive_timeout         10;

  error_page 500 502 504    /500.html;
  error_page 503            @503;

  proxy_set_header  Host $http_host;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Host $host;
  proxy_set_header  X-Forwarded-Port $server_port;
  proxy_set_header  X-Forwarded-Proto $scheme;
  proxy_set_header  X-Forwarded-Ssl on; # Optional
  proxy_set_header  X-Real-IP  $remote_addr;

  location @dashboard {
    proxy_redirect off;
    proxy_pass http://dashboard;
  }

  location @core {
    proxy_redirect off;
    proxy_pass http://core;
  }

  location @flower {
    proxy_redirect off;
    proxy_pass http://flower;
  }

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @dashboard;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ \.(php|html)$ {
    return 405;
  }

  location /monitoring/ {
    proxy_pass         http://chronograf:8888/monitoring/;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @dashboard;
  }

  location ^~ /core/admin {
    try_files $uri @core;
  }

  location ^~ /core/tasks {
    rewrite ^/core/tasks/(.*)$ /$1 break;
    try_files $uri @flower;
  }
}
